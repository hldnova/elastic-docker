filter {
    if [type] == "syslog_access_legacy" {
        grok {
            match => { "message" => "(vdc_name=(?<ecs-vdc-name>([^,]+)),vdc_id=(?<ecs-vdc-id>([\S]+)) )?%{GREEDYDATA:message}" }
            overwrite => ["message" ]
        }

        grok {
            match => { "message" => "^%{TIMESTAMP_ISO8601:timestamp}%{SPACE}(?<thread_name>\[(.*?)\])%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{JAVAFILE:file_name}%{SPACE}\(%{WORD}%{SPACE}%{NUMBER}\)%{SPACE}%{GREEDYDATA:log_message}" }
        }

        if [file_name] == "RequestLog.java" {
            grok {
                match => { "log_message" => "^%{IPORHOST:client_host} %{WORD:verb} %{DATA}//%{IPORHOST:server_host}(?::%{POSINT:server_port})?%{URIPATH:uri_path}(%{URIPARAM:uri_param})? %{DATA}/%{DATA} %{NUMBER:status:int} %{NUMBER:resp_time_ms:int} (?:%{NUMBER:bytes_ingress:int}|-) (?:%{NUMBER:bytes_egress:int}|-)( 'X-Forwarded-For: %{IPORHOST:client_host}')?( 'User-Agent: %{GREEDYDATA:user_agent}')?%{GREEDYDATA}" }
                add_tag => [ "request_log" ]
                overwrite => ["client_host" ]
                add_field => {
                    "method" => "%{verb}"
                    "response" => "%{status}"
                    "clientip" => "%{client_host}"
                    "request" => "%{uri_path}"
                    "ecs-node-ip" => "%{host}"
                }
            }

            if [resp_time_ms] {
                mutate { add_field => { "duration" => "%{resp_time_ms}" } }
            }
            if [bytes_egress] { 
                mutate { add_field => { "download" => "%{bytes_egress}" } }         
            }
            if [bytes_ingress] {
                mutate { add_field => { "upload" => "%{bytes_ingress}" } }
            }

            date {
                match => [ "timestamp" , "ISO8601" ]
                timezone => "UTC"
            }
      
            mutate {
                remove_field => [ 
                    "timestamp",
                    "log_message",
                    "facility",
                    "facility_label",
                    "logsource",
                    "priority",
                    "severity",
                    "severity_label"
                ]
            }

            mutate {
                replace => { type => "accesslog" }
            }
        }
    }
}

