###################### Metricbeat Configuration Example #######################

# This file is an example configuration file highlighting only the most common
# options. The metricbeat.full.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/metricbeat/index.html

#==========================  Modules configuration ============================
metricbeat.modules:

#------------------------------- System Module -------------------------------
- module: system
  enabled: true
  period: 10s
  metricsets:
    - cpu
    #- load
    - memory
    #- core
    #- diskio
    - network
    - process_summary
    - process
    #- socket
  processes: ['.*']
  process.include_top_n:
    by_cpu: 5      # include top 5 processes by CPU
    by_memory: 5   # include top 5 processes by memory
- module: system
  enabled: true
  period: 1m
  metricsets:
    - filesystem
    - fsstat
  filters:
    - drop_event.when.regexp.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

- module: windows
  metricsets: ["perfmon"]
  enabled: true
  period: 10s
  perfmon.counters:
    - alias: "processor.time.total.pct"
      query: '\Processor Information(_Total)\% Processor Time'
      format: "long"
    - alias: "diskio.bytes_per_sec"
      query: '\PhysicalDisk(_Total)\Disk Bytes/sec'
      format: "long"
    - alias: "diskio.read.bytes_per_sec"
      query: '\PhysicalDisk(_Total)\Disk Read Bytes/sec'
      format: "long"
    - alias: "diskio.reads_per_sec"
      query: '\PhysicalDisk(_Total)\Disk Reads/sec'
      format: "long"      
    - alias: "diskio.transfers_per_sec"
      query: '\PhysicalDisk(_Total)\Disk Transfers/sec'
      format: "long"      
    - alias: "diskio.writes_per_sec"
      query: '\PhysicalDisk(_Total)\Disk Writes/sec'
      format: "long"      
    - alias: "diskio.write.bytes_per_sec"
      query: '\PhysicalDisk(_Total)\Disk Write Bytes/sec'
      format: "long"
    - alias: "cifs-ecs.client.received.bytes_per_sec"
      query: '\CIFS-ECS Client\Bytes Received (bytes/sec)'
      format: "long"   
    - alias: "cifs-ecs.client.sent.bytes_per_sec"
      query: '\CIFS-ECS Client\Bytes Sent (bytes/sec)'
      format: "long"
    - alias: "cifs-ecs.client.upload.queue.length"
      query: '\CIFS-ECS Client\Upload Queue Length'
      format: "long"
    - alias: "cifs-ecs.client.upload.queue.rate.ops_per_sec"
      query: '\CIFS-ECS Client\Upload Queue Rate (ops/sec)'
      format: "long"
    - alias: "cifs-ecs.client.stub.file.queue.length"
      query: '\CIFS-ECS Client\Stub File Queue Length'
      format: "long"
    - alias: "cifs-ecs.client.stub.file.queue.rate.ops_per_sec"
      query: '\CIFS-ECS Client\Stub File Queue Rate (ops/sec)'
      format: "long" 
    - alias: "cifs-ecs.client.restore.queue.length"
      query: '\CIFS-ECS Client\Restore Queue Length'
      format: "long"
    - alias: "cifs-ecs.client.restore.queue.rate.ops_per_sec"
      query: '\CIFS-ECS Client\Restore Queue Rate (ops/sec)'
      format: "long"
    - alias: "cifs-ecs.client.open.directories"
      query: '\CIFS-ECS Client\Open Directories'
      format: "long"
    - alias: "cifs-ecs.client.open_files"
      query: '\CIFS-ECS Client\Open Files'
      format: "long"
    - alias: "cifs-ecs.client.open.files.offline"
      query: '\CIFS-ECS Client\Open Files (offline)'
      format: "long"
    - alias: "cifs-ecs.client.open.files.private_to_cifs_ecs"
      query: '\CIFS-ECS Client\Open Files (Private to CIFS-ECS)'
      format: "long"

#    - alias: "cifs-ecs.folder.changelog.queue.input.rate.ops_per_sec"
#      query: '\CIFS-ECS Folder(E:\)\Change Log Queue Input Rate (ops/sec)'
#      format: "long"
#    - alias: "cifs-ecs.folder.changelog.queue.output.rate.ops_per_sec"
#      query: '\CIFS-ECS Folder(E:\)\Change Log Queue Output Rate (ops/sec)'
#      format: "long"
#    - alias: "cifs-ecs.folder.changelog.queue.length"
#      query: '\CIFS-ECS Folder(E:\)\Change Log Queue Length'
#      format: "long"


#==================== Elasticsearch template setting ==========================
setup.template.settings:
  index.number_of_shards: 1
  index.codec: best_compression
  #_source.enabled: false

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging

#================================ Outputs =====================================

# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.

#-------------------------- Elasticsearch output ------------------------------
#output.elasticsearch:
  # Array of hosts to connect to.
  #hosts: ["10.1.83.29:9200"]

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"

#----------------------------- Logstash output --------------------------------
output.logstash:
  # The Logstash hosts
  hosts: ["10.1.1.1:5044" ]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: critical, error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]
